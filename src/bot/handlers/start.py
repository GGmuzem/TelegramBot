"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
"""
import logging
from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from src.bot.keyboards.main import get_main_keyboard
from src.database.crud import UserCRUD
from src.shared.config import PACKAGES

logger = logging.getLogger(__name__)
router = Router()

# CRUD –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
user_crud = UserCRUD()


@router.message(CommandStart())
async def start_handler(message: Message, user: dict):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ middleware
        keyboard = get_main_keyboard()
        
        welcome_text = f"""
ü§ñ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AI Image Generator Bot!</b>

üëã –ü—Ä–∏–≤–µ—Ç, <b>{user['first_name']}</b>!

üéØ <b>–í–∞—à ID:</b> <code>{user['telegram_id']}</code>
üí∞ <b>–ë–∞–ª–∞–Ω—Å:</b> {user['balance']} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
üìÖ <b>–° –Ω–∞–º–∏ —Å:</b> {user['created_at'].strftime('%d.%m.%Y')}

üöÄ <b>–ß—Ç–æ —è —É–º–µ—é:</b>
‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é —Ä–∞–∑–Ω—ã–µ —Å—Ç–∏–ª–∏: —Ä–µ–∞–ª–∏–∑–º, –∞–Ω–∏–º–µ, –∞—Ä—Ç, –ø–æ—Ä—Ç—Ä–µ—Ç
‚Ä¢ –†–∞–±–æ—Ç–∞—é –Ω–∞ –º–æ—â–Ω—ã—Ö RTX 5080 –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
‚Ä¢ –ü—Ä–∏–Ω–∏–º–∞—é –æ–ø–ª–∞—Ç—É –∫–∞—Ä—Ç–∞–º–∏, –°–ë–ü, SberPay, –ÆMoney

üí° <b>–¢–∞—Ä–∏—Ñ—ã:</b>
üíé –†–∞–∑–æ–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è: 49‚ÇΩ (1 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ)
üì¶ –ë–∞–∑–æ–≤—ã–π –ø–∞–∫–µ—Ç: 299‚ÇΩ (10 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)
‚≠ê –ü—Ä–µ–º–∏—É–º –ø–∞–∫–µ—Ç: 599‚ÇΩ (25 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π + –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
üî• –ü—Ä–æ—Ñ–∏ –ø–∞–∫–µ—Ç: 1299‚ÇΩ (60 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π + –±–µ–∑ –æ—á–µ—Ä–µ–¥–∏)

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ ‚¨áÔ∏è
"""
        
        await message.answer(welcome_text, reply_markup=keyboard)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user['telegram_id']} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ start_handler: {e}")
        await message.answer(
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", 
            reply_markup=get_main_keyboard()
        )


@router.callback_query(F.data == "back_to_main")
async def back_to_main_handler(callback: CallbackQuery, user: dict):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    try:
        keyboard = get_main_keyboard()
        
        main_menu_text = f"""
üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>

üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user['full_name']}
üí∞ <b>–ë–∞–ª–∞–Ω—Å:</b> {user['balance']} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
üìä <b>–í—Å–µ–≥–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ:</b> {user['total_generations']}

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
"""
        
        await callback.message.edit_text(
            main_menu_text, 
            reply_markup=keyboard
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ back_to_main_handler: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)


@router.callback_query(F.data == "check_balance")
async def check_balance_handler(callback: CallbackQuery, user: dict):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        fresh_user = await user_crud.get_by_telegram_id(user['telegram_id'])
        
        subscription_info = ""
        if fresh_user and fresh_user.subscription_type and fresh_user.has_active_subscription:
            subscription_info = (
                f"\nüéØ <b>–ü–æ–¥–ø–∏—Å–∫–∞:</b> {fresh_user.subscription_type.upper()}\n"
                f"‚è∞ <b>–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:</b> {fresh_user.subscription_expires.strftime('%d.%m.%Y %H:%M')}"
            )
        
        balance_text = f"""
üí∞ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–ª–∞–Ω—Å–µ</b>

üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user['full_name']}
üÜî <b>ID:</b> <code>{user['telegram_id']}</code>
üíé <b>–ë–∞–ª–∞–Ω—Å:</b> {fresh_user.balance if fresh_user else user['balance']} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π{subscription_info}

üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –í—Å–µ–≥–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: {user['total_generations']}
‚Ä¢ –í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: {user['total_spent']}‚ÇΩ
‚Ä¢ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user['created_at'].strftime('%d.%m.%Y')}
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {user.get('last_activity', '–°–µ–π—á–∞—Å')}

{"üîã –ë–∞–ª–∞–Ω—Å –≤ –ø–æ—Ä—è–¥–∫–µ!" if user['balance'] > 0 else "‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å"}
"""
        
        from src.bot.keyboards.main import get_balance_keyboard
        keyboard = get_balance_keyboard()
        
        await callback.message.edit_text(balance_text, reply_markup=keyboard)
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ check_balance_handler: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", show_alert=True)


@router.callback_query(F.data == "help")
async def help_handler(callback: CallbackQuery):
    """–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞"""
    help_text = f"""
‚ùì <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é AI Image Generator Bot</b>

üé® <b>–ö–∞–∫ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</b>
1. –ù–∞–∂–º–∏—Ç–µ "–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
2. –û–ø–∏—à–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å
3. –ñ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç (15-60 —Å–µ–∫—É–Ω–¥)
4. –ü–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

üí≥ <b>–ö–∞–∫ –∫—É–ø–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</b>
1. –ù–∞–∂–º–∏—Ç–µ "–ö—É–ø–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
2. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ
3. –û–ø–ª–∞—Ç–∏—Ç–µ –∫–∞—Ä—Ç–æ–π, –°–ë–ü –∏–ª–∏ –ÆMoney
4. –ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏

‚ú® <b>–°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:</b>
‚Ä¢ –û–ø–∏—Å—ã–≤–∞–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω–æ: —Ü–≤–µ—Ç–∞, —Å—Ç–∏–ª—å, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å
‚Ä¢ –ü–∏—à–∏—Ç–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º

üéØ <b>–ü—Ä–∏–º–µ—Ä—ã —Ö–æ—Ä–æ—à–∏—Ö –ø—Ä–æ–º–ø—Ç–æ–≤:</b>
‚Ä¢ "–ü–æ—Ä—Ç—Ä–µ—Ç –¥–µ–≤—É—à–∫–∏ —Å –∑–µ–ª–µ–Ω—ã–º–∏ –≥–ª–∞–∑–∞–º–∏, —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ"
‚Ä¢ "–ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –ø–µ–π–∑–∞–∂ –≤ —Å—Ç–∏–ª–µ —Ä–µ—Ç—Ä–æ-—Ñ—É—Ç—É—Ä–∏–∑–º–∞"
‚Ä¢ "–ú–∏–ª—ã–π —â–µ–Ω–æ–∫ –≤ —Å—Ç–∏–ª–µ Disney, –º—É–ª—å—Ç—è—à–Ω—ã–π"

‚öôÔ∏è <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∏–ª–∏:</b>
‚Ä¢ –†–µ–∞–ª–∏–∑–º - —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
‚Ä¢ –ê–Ω–∏–º–µ - —è–ø–æ–Ω—Å–∫–∞—è –º—É–ª—å—Ç–∏–ø–ª–∏–∫–∞—Ü–∏—è
‚Ä¢ –ê—Ä—Ç - —Ü–∏—Ñ—Ä–æ–≤–∞—è –∂–∏–≤–æ–ø–∏—Å—å
‚Ä¢ –ü–æ—Ä—Ç—Ä–µ—Ç - —Ñ–æ–∫—É—Å –Ω–∞ –ª–∏—Ü–∞—Ö –∏ –ª—é–¥—è—Ö
‚Ä¢ –ü–µ–π–∑–∞–∂ - –ø—Ä–∏—Ä–æ–¥–∞ –∏ –º–µ—Å—Ç–∞
‚Ä¢ –ê–±—Å—Ç—Ä–∞–∫—Ü–∏—è - –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ

üí∞ <b>–¢–∞—Ä–∏—Ñ—ã:</b>
‚Ä¢ –†–∞–∑–æ–≤–∞—è - 49‚ÇΩ –∑–∞ 1 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
‚Ä¢ –ë–∞–∑–æ–≤—ã–π - 299‚ÇΩ –∑–∞ 10 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ –ü—Ä–µ–º–∏—É–º - 599‚ÇΩ –∑–∞ 25 + –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
‚Ä¢ –ü—Ä–æ—Ñ–∏ - 1299‚ÇΩ –∑–∞ 60 + –±–µ–∑ –æ—á–µ—Ä–µ–¥–∏

üìû <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>
‚Ä¢ Telegram: @ai_support_bot
‚Ä¢ Email: support@aibot.ru
‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 24/7

üîí <b>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</b>
–í—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –∑–∞—â–∏—â–µ–Ω—ã –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É PCI DSS
"""
    
    from src.bot.keyboards.main import get_back_keyboard
    keyboard = get_back_keyboard()
    
    await callback.message.edit_text(help_text, reply_markup=keyboard)
    await callback.answer()


@router.callback_query(F.data == "statistics")
async def statistics_handler(callback: CallbackQuery, user: dict):
    """–ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–π
        from src.database.crud import GenerationCRUD
        generation_crud = GenerationCRUD()
        
        user_generations = await generation_crud.get_user_generations(
            user['telegram_id'], 
            limit=5
        )
        
        stats_text = f"""
üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>

üë§ <b>{user['full_name']}</b>
üÜî ID: <code>{user['telegram_id']}</code>

üìà <b>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–æ–∑–¥–∞–Ω–æ: {user['total_generations']}
‚Ä¢ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤: {user['total_spent']}‚ÇΩ
‚Ä¢ –î–Ω–µ–π —Å –Ω–∞–º–∏: {(user.get('last_activity', user['created_at']) - user['created_at']).days}

üí∞ <b>–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:</b>
‚Ä¢ –ë–∞–ª–∞–Ω—Å: {user['balance']} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞: {user.get('subscription_type', '–ù–µ—Ç').upper()}

üé® <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:</b>
"""
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏—è—Ö
        if user_generations:
            for i, gen in enumerate(user_generations, 1):
                status_emoji = {
                    "completed": "‚úÖ",
                    "failed": "‚ùå",
                    "processing": "‚è≥",
                    "pending": "üïê"
                }.get(gen.status, "‚ùì")
                
                prompt_preview = gen.prompt[:30] + "..." if len(gen.prompt) > 30 else gen.prompt
                date_str = gen.created_at.strftime('%d.%m %H:%M')
                
                stats_text += f"{i}. {status_emoji} {prompt_preview} ({date_str})\n"
        else:
            stats_text += "–ü–æ–∫–∞ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"
        
        from src.bot.keyboards.main import get_back_keyboard
        keyboard = get_back_keyboard()
        
        await callback.message.edit_text(stats_text, reply_markup=keyboard)
        await callback.answer()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ statistics_handler: {e}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", show_alert=True)